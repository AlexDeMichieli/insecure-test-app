name: Threadfix connector

on: [ push ]

permissions:
  security-events: read
  contents: read
  
jobs:
 create_input_file:
    runs-on: ubuntu-latest
    steps:
      - name: Get ETag
        run: |
            etag=$(curl -I https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts | grep 'ETag' | awk '{print $2}')
      - name: GET code scanning alerts
        uses: actions/checkout@v3
      - run: | 
              gh api repos/${{ github.repository }}/code-scanning/alerts --paginate -H "If-None-Match: ${{ steps.get_etag.outputs.etag }}" | jq --slurp 'flatten' > ./input_file.json
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate file 
        run : |
              if [ "$(gh api repos/${{ github.repository }}/code-scanning/alerts --paginate -H "If-None-Match: ${{ steps.get_etag.outputs.etag }}" -w "%{http_code}")" == "304" ]; then
              echo "Resource has not been modified, exiting."
              exit 0
              fi
              if [ -s input_file.json ]; then
              if grep -q "number" input_file.json; then
              echo "Got data!"
              else
              echo "No valid data to work with!"
              exit 1
              fi
          
      - name: Debug failure
        if: failure()
        run: |
             cat input_file.json && echo "no valid data to work with!"
 
      - name: Upload SARIF file
        uses: actions/upload-artifact@v3
        with:
          name: SARIF
          path: input_file.json
       

 create_output_file:
    runs-on: ubuntu-latest
    needs: create_input_file
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
         python-version: '3.10'
      - name: Download json file and echo it
        uses: actions/download-artifact@v3
        with:
         name: SARIF
      - shell: bash
        run: |
          value=`cat input_file.json`
          echo $value
      - name: Run conversion script
        run: python sarif_converter.py input_file.json output_file.threadfix
      - name: look around
        run: |
          value=`cat output_file.threadfix`
          echo $value
          ls -a
      - name: Upload output file
        uses: actions/upload-artifact@v3
        with:
          name: SARIF
          path: output_file.threadfix
          
 push_to_threadfix: 
     runs-on: ubuntu-latest
     needs: create_output_file
     steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download output file and push it to threadfix
        uses: actions/download-artifact@v3
        with:
          name: SARIF
      - name: Push to threadfix
        run: |
               curl --insecure -H 'Accept: application/json' -H "Authorization: APIKEY ${{secrets.TFIX_API_KEY}}" -X POST --form file=@output_file.threadfix ${{secrets.TFIX_INSTANCE_URL}}/threadfix/rest/latest/applications/1/upload

