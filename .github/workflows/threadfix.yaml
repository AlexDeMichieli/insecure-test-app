name: "Code Scanning and Threadfix Action "

on:
  push:
    branches:
      - test


jobs:
   
  Threadfix-action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Run Threadfix Connector
        uses: coalfire/github-threadfix-scan-upload@v3
        with: 
          TFIX_API_KEY: ${{secrets.TFIX_API_KEY}}
          TFIX_INSTANCE_URL: ${{secrets.TFIX_INSTANCE_URL}}
          TFIX_APP_ID: ${{secrets.TFIX_APP_ID}}  

# name: Threadfix connector

# on:
#   push:
#     branches:
#       - test


# permissions:
#   security-events: read
#   contents: read
  
# jobs:
#  create_input_file:
#     runs-on: ubuntu-latest
#     steps:
#       - name: GET code scanning alerts
#         uses: actions/checkout@v3
#       - run: | 
#               gh api -X GET repos/${{github.repository}}/code-scanning/alerts -F state=open -F ref=${{github.ref}} --paginate | jq --slurp 'flatten' > ./input_file.json
#         env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Validate file 
#         run : |
#               if test -f "input_file.json"; then echo "got data"; else exit 1; fi
          
#       - name: Debug failure
#         if: failure()
#         run: |
#              cat input_file.json && echo "no valid data to work with!"
 
#       - name: Upload SARIF file
#         uses: actions/upload-artifact@v3
#         with:
#           name: SARIF
#           path: input_file.json
       

#  create_output_file:
#     runs-on: ubuntu-latest
#     needs: create_input_file
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#          python-version: '3.10'
#       - name: Download json file and echo it
#         uses: actions/download-artifact@v3
#         with:
#          name: SARIF
#       - shell: bash
#         run: |
#           value=`cat input_file.json`
#           echo $value
#       - name: Run conversion script
#         run: python threadfix_converter.py input_file.json output_file.threadfix "${{github.repository}}_${{github.ref}}"
#       - name: look around
#         run: |
#           value=`cat output_file.threadfix`
#           echo $value
#           ls -a
#       - name: Upload output file
#         uses: actions/upload-artifact@v3
#         with:
#           name: SARIF
#           path: output_file.threadfix
          
#  push_to_threadfix: 
#      runs-on: ubuntu-latest
#      needs: create_output_file
#      steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Download output file and push it to threadfix
#         uses: actions/download-artifact@v3
#         with:
#           name: SARIF
#       - name: Push to threadfix
#         run: |
#                curl --insecure -H 'Accept: application/json' -H "Authorization: APIKEY ${{secrets.TFIX_API_KEY}}" -X POST --form file=@output_file.threadfix ${{secrets.TFIX_INSTANCE_URL}}/threadfix/rest/latest/applications/1/upload
